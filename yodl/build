#!/usr/bin/icmake -qt/tmp/yodl

#include "src/config.h"

void buildIn(string where, string what, string arg)
{
    string cwd;

    cwd = chdir(".");
    chdir(where);
    exec("./build", what, arg);
    chdir(cwd);
}

void cleanup()
{
    buildIn("src",      "clean", "");
    buildIn("macros",   "clean", "");
    buildIn("manual",   "clean", "");
    buildIn("man",      "clean", "");
    system("rm -f release.yo");
}

void buildProgram()
{
    buildIn("src",      "progs", "");   // first, create yodl and yodl-post

    buildIn("macros",   "version", ""); // then create the version file
    buildIn("macros",   "std", "");     // and the std conversions
}

void buildMacroList(string path)
{
    buildIn("manual", "docmacros", path);
}

void buildMan()
{
    buildIn("man", "man", "");
}    

void buildManExit(string path)
{
    buildMacroList(path);
    buildIn("man", "man", path);
    exit(0);
}    

void buildManual()
{
    buildIn("manual", "manual", "");
}    

void buildManualExit(string path)
{
    buildMacroList(path);
    buildIn("manual",   "manual", path);
    exit(0);
}    

void package()
{
    buildProgram();
    
    buildMacroList("");
    buildManual();    
    buildMan();
}

void install(string where, string what)
{
    int all;

    all = what == "";

    system("mkdir -p " + where);

    if (all || what == "program")
    {
        buildIn("src",      "install",  where + "/bin");
        buildIn("macros",   "install",  where + "/share/yodl");
        system("mkdir -p "            + where + "/share/doc/yodl");
        exec("cp", "-r", 
            "AUTHORS.txt changelog contrib CHANGES PATCHES.txt README.txt", 
            where + "/share/doc/yodl");
    }

    if (all || what == "man")
        buildIn("man",      "install",  where);

    if (all || what == "manual")
        buildIn("manual",   "install",  where);
}

void main(int argc, list argv)
{
    string arg1;

    if (argc == 1)
    {
        printf
        (
            "\n"
            "Build what? Options are:\n"
            "   clean: clean up\n"
            "   install WHERE: install the products under WHERE "
                                                "(following `build package')\n"
            "                  The Debian installation process will install "
                                                        "under debian/tmp\n"
            "   install WHERE program:  install the program under WHERE\n"
            "   install WHERE man:      install the man-pages under WHERE\n"
            "   install WHERE manual:   install the manual under WHERE\n"
            "\n"
            "All subsequent after `build clean':\n"
            "   program: build the program\n"
            "   man [path]:     build the man-pages (yodl in $PATH if "
                                                        "`path' is provided)\n"
            "   manual [path]:  build the manual (yodl in $PATH if "
                                                        "`path' is provided)\n"
            "   package: build all parts of the package (using ./.../yodl)\n"
            "\n"
        );
        exit(1);
    }

    arg1 = argv[1];

    if (arg1 == "clean")
        cleanup();
    else if (arg1 == "install")
        install(argv[2], argv[3]);
    else if (arg1 == "package")
        package();
    else if (arg1 == "man")
        buildManExit(argv[2]);
    else if (arg1 == "program")
        buildProgram();
    else if (arg1 == "manual")
        buildManualExit(argv[2]);
    else
    {
        printf("request `", arg1, "' not yet available\n");
        exit(1);
    }
    exit(0);
}

